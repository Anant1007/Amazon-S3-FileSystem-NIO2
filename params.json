{"name":"Amazon S3 API for Java 7","tagline":"An Amazon AWS S3 FileSystem Provider for Java 7 (NIO2)","body":"**Amazon Simple Storage Service** (S3) provides a fully redundant data storage infrastructure for storing and retrieving any amount of data, at any time.\r\nNIO2 is the new file management **API**, introduced in Java version 7. \r\nThis project provides a first API implementation, little optimized, but **\"complete\"** to manage files and folders directly on **Amazon S3**.\r\n\r\n**Features**:\r\n\r\n* Crear directorio y ficheros\r\n* Borrar directorios y ficheros\r\n* Copiar entre Paths con distintos providers\r\n* Recorrer ficheros de un directorio.\r\n* Permite trabajar con directorios virtuales (folders que no existen como objetos en Amazon S3 y son subkeys de un elemento)\r\n\r\n**Roadmap**:\r\n\r\n* Performance issue (slow querys with virtual folders)\r\n* Muchos mas tests unitarios (better test coverage)\r\n* No permitir subir ficheros con mismo nombre que folders y viceversa (Disallow upload binary files with same name as folders and vice versa)\r\n* Decidir que hacer con FileSystemProvider. ¿se pueden crear varios? ¿por bucketname, en vez de por endpoint?\r\n* Utilizar Multipart para una mejor implementación del outputstream\r\n* ¿alguna idea para los seekable?\r\n\r\n**Fuera del Roadmap**:\r\n\r\n* Watchers\r\n* FileStore","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}